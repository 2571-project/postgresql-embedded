name: Build & Test

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"
  RUST_LOG: "info"
  RUST_LOG_SPAN_EVENTS: full

on:
  workflow_call:
    inputs:
      ref:
        default: ${{ github.ref }}
        type: string

jobs:
  build:
    name: ${{ matrix.platform }} (${{ matrix.target }}) (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux-x64
          - macos-arm64
          - macos-x64
          - windows-x64

        include:
          - platform: linux-x64
            os: ubuntu-latest
          - platform: macos-arm64
            os: macos-14
          - platform: macos-x64
            os: macos-13
          - platform: windows-x64
            os: windows-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Enable caching
      uses: Swatinem/rust-cache@v2

    - name: Tests
      run: |
        cargo test --workspace --all-features

    - name: Install toolchain
      if: ${{ matrix.platform == 'linux-x64' }}
      id: toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-musl
        override: true
        components: llvm-tools-preview

    - name: Download grcov
      if: ${{ matrix.platform == 'linux-x64' }}
      run: |
        mkdir -p "${HOME}/.local/bin"
        curl -sL https://github.com/mozilla/grcov/releases/download/v0.8.10/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf - -C "${HOME}/.local/bin"
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Run xtask coverage
      if: ${{ matrix.platform == 'linux-x64' }}
      uses: actions-rs/cargo@v1
      with:
        command: xtask
        args: coverage

    - name: Upload coverage reports to Codecov
      if: ${{ matrix.platform == 'linux-x64' }}
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: coverage/*.lcov
